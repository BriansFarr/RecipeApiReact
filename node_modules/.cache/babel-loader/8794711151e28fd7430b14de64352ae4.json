{"ast":null,"code":"var _jsxFileName = \"/Users/brianfarr/Desktop/reAct/ultralightbeam/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Recipe from './recipe';\nimport \"./App.css\";\n\nconst App = () => {\n  const APP_ID = \"63a334a9\";\n  const APP_KEY = \"ff01d9bceb487327e576bbda49ebe1e3\";\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    console.log(search);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"search-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"search-bar\",\n    type: \"text\",\n    value: search,\n    onChange: updateSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"search-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"search\")), recipes.map(recipe => /*#__PURE__*/React.createElement(Recipe, {\n    key: recipe.recipe.label,\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories,\n    image: recipe.recipe.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/brianfarr/Desktop/reAct/ultralightbeam/src/App.js"],"names":["React","useEffect","useState","Recipe","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","getRecipes","response","fetch","data","json","hits","console","log","updateSearch","e","target","value","map","recipe","label","calories","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,MAAM,GAAG,UAAf;AACA,QAAMC,OAAO,GAAG,kCAAhB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAGAD,EAAAA,SAAS,CAAE,MAAM;AACfU,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kDAAiDR,MAAO,YAAWC,OAAQ,EAA7E,CAA5B;AACA,UAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,IAAAA,UAAU,CAACM,IAAI,CAACE,IAAN,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,IAAjB;AACD,GALD;;AAOA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACxBV,IAAAA,SAAS,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAG,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,IAAI,EAAC,MAAnC;AAA0C,IAAA,KAAK,EAAEA,MAAjD;AAAyD,IAAA,QAAQ,EAAEU,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,EAKGZ,OAAO,CAACgB,GAAR,CAAYC,MAAM,iBACjB,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAGA,MAAM,CAACA,MAAP,CAAcC,KAA5B;AAAmC,IAAA,KAAK,EAAID,MAAM,CAACA,MAAP,CAAcC,KAA1D;AAAiE,IAAA,QAAQ,EAAED,MAAM,CAACA,MAAP,CAAcE,QAAzF;AACA,IAAA,KAAK,EAAIF,MAAM,CAACA,MAAP,CAAcG,KADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CALH,CADF;AAaD,CAtCD;;AAwCA,eAAevB,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Recipe from './recipe'\nimport \"./App.css\";\n\n\n\n\nconst App = () => {\n  const APP_ID = \"63a334a9\";\n  const APP_KEY = \"ff01d9bceb487327e576bbda49ebe1e3\";\n  \n  const [recipes, setRecipes] = useState([]);\n  \n  const [search, setSearch] = useState('');\n\n\n  useEffect( () => {\n    getRecipes()\n  }, []);\n  \n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n \n  const updateSearch = e => {\n    setSearch(e.target.value);\n    console.log(search)\n  }\n\n  return (\n    <div className=\"App\">\n      <form className = \"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}/>\n        <button className=\"search-button\" type=\"submit\">search</button>\n      </form>\n      {recipes.map(recipe => (\n        <Recipe key= {recipe.recipe.label} title = {recipe.recipe.label} calories={recipe.recipe.calories}\n        image = {recipe.recipe.image}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}